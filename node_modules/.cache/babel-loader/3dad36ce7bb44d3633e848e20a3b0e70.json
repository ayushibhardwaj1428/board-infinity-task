{"ast":null,"code":"import { SET_ALBUMS, ADD_ALBUMS, SET_ARTISTS, ADD_ARTISTS, SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\nimport { get } from '../utils/api';\nexport const setAlbums = albums => ({\n  type: SET_ALBUMS,\n  albums\n});\nexport const addAlbums = albums => ({\n  type: ADD_ALBUMS,\n  albums\n});\nexport const setArtists = artists => ({\n  type: SET_ARTISTS,\n  artists\n});\nexport const addArtists = artists => ({\n  type: ADD_ARTISTS,\n  artists\n});\nexport const setPlayList = playlists => ({\n  type: SET_PLAYLIST,\n  playlists\n});\nexport const addPlaylist = playlists => ({\n  type: ADD_PLAYLIST,\n  playlists\n});\nexport const initiateGetResult = searchTerm => {\n  return async dispatch => {\n    try {\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(searchTerm)}&type=album,playlist,artist`;\n      const result = await get(API_URL);\n      console.log(result);\n      const {\n        albums,\n        artists,\n        playlists\n      } = result;\n      dispatch(setAlbums(albums));\n      dispatch(setArtists(artists));\n      return dispatch(setPlayList(playlists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\nexport const initiateLoadMoreAlbums = url => {\n  return async dispatch => {\n    try {\n      const result = await get(url);\n      return dispatch(addAlbums(result.albums));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\nexport const initiateLoadMoreArtists = url => {\n  return async dispatch => {\n    try {\n      const result = await get(url);\n      return dispatch(addArtists(result.artists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\nexport const initiateLoadMorePlaylist = url => {\n  return async dispatch => {\n    try {\n      const result = await get(url);\n      return dispatch(addPlaylist(result.playlists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};","map":{"version":3,"sources":["G:/boardinfinity-task/music/src/actions/result.js"],"names":["SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","get","setAlbums","albums","type","addAlbums","setArtists","artists","addArtists","setPlayList","playlists","addPlaylist","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","result","console","log","error","initiateLoadMoreAlbums","url","initiateLoadMoreArtists","initiateLoadMorePlaylist"],"mappings":"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","sourcesContent":["import {\n  SET_ALBUMS,\n  ADD_ALBUMS,\n  SET_ARTISTS,\n  ADD_ARTISTS,\n  SET_PLAYLIST,\n  ADD_PLAYLIST\n} from '../utils/constants';\nimport { get } from '../utils/api';\n\nexport const setAlbums = (albums) => ({\n  type: SET_ALBUMS,\n  albums\n});\n\nexport const addAlbums = (albums) => ({\n  type: ADD_ALBUMS,\n  albums\n});\n\nexport const setArtists = (artists) => ({\n  type: SET_ARTISTS,\n  artists\n});\n\nexport const addArtists = (artists) => ({\n  type: ADD_ARTISTS,\n  artists\n});\n\nexport const setPlayList = (playlists) => ({\n  type: SET_PLAYLIST,\n  playlists\n});\n\nexport const addPlaylist = (playlists) => ({\n  type: ADD_PLAYLIST,\n  playlists\n});\n\nexport const initiateGetResult = (searchTerm) => {\n  return async (dispatch) => {\n    try {\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\n        searchTerm\n      )}&type=album,playlist,artist`;\n      const result = await get(API_URL);\n      console.log(result);\n      const { albums, artists, playlists } = result;\n      dispatch(setAlbums(albums));\n      dispatch(setArtists(artists));\n      return dispatch(setPlayList(playlists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\n\nexport const initiateLoadMoreAlbums = (url) => {\n  return async (dispatch) => {\n    try {\n      const result = await get(url);\n      return dispatch(addAlbums(result.albums));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\n\nexport const initiateLoadMoreArtists = (url) => {\n  return async (dispatch) => {\n    try {\n      const result = await get(url);\n      return dispatch(addArtists(result.artists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\n\nexport const initiateLoadMorePlaylist = (url) => {\n  return async (dispatch) => {\n    try {\n      const result = await get(url);\n      return dispatch(addPlaylist(result.playlists));\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}